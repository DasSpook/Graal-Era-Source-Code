precision mediump float;

uniform sampler2D textureUnit0;
uniform sampler2D textureUnit1;
uniform sampler2D textureUnit2;
uniform sampler2D textureUnit3;

uniform int textureCount;
uniform int blendingMode[4];

varying vec2 texCoord[4];
varying vec4 vertexColor;
varying float fogWeight;
varying vec3 fogVertexColor;

const vec4 WHITE = vec4(1,1,1,1);

void main() {
	vec4 col = texture2D(textureUnit0, texCoord[0]) * vertexColor;
	
	if (textureCount>1) {
	
		// Can't index texture samplers and switch doesn't seem to compile(?)...end result:
	
		if (blendingMode[1]==0) {
			// Modulate
			col *= texture2D(textureUnit1, texCoord[1]);
		} else if (blendingMode[1]==1) {
			// Add
			col += texture2D(textureUnit1, texCoord[1]);
		} else if (blendingMode[1]==3) {
			// Blend
			col *= (WHITE - texture2D(textureUnit1, texCoord[1]));
		} else if (blendingMode[1]==2) {
			// Replace
			col = texture2D(textureUnit1, texCoord[1]);
		}
		
		if (textureCount>2) {
			if (blendingMode[2]==0) {
				// Modulate
				col *= texture2D(textureUnit2, texCoord[2]);
			} else if (blendingMode[2]==1) {
				// Add
				col += texture2D(textureUnit2, texCoord[2]);
			} else if (blendingMode[2]==3) {
				// Blend
				col *= (WHITE - texture2D(textureUnit2, texCoord[2]));
			} else if (blendingMode[2]==2) {
				// Replace
				col = texture2D(textureUnit2, texCoord[2]);
			}
			
			if (textureCount>3) {
				if (blendingMode[3]==0) {
					// Modulate
					col *= texture2D(textureUnit3, texCoord[3]);
				} else if (blendingMode[3]==1) {
					// Add
					col += texture2D(textureUnit3, texCoord[3]);
				} else if (blendingMode[3]==3) {
					// Blend
					col *= (WHITE - texture2D(textureUnit3, texCoord[3]));
				} else if (blendingMode[3]==2) {
					// Replace
					col = texture2D(textureUnit3, texCoord[3]);
				}
			}
		}
	}
	
	if (fogWeight>-0.9) {
		col.xyz = (1.0-fogWeight) * col.xyz + fogVertexColor;
	}
	
	gl_FragColor=col;
}


